// Generated by CoffeeScript 1.6.3
var finder, s3;

finder = require('./backup_finder');

s3 = require('./s3');

module.exports = {
  stream: function(_arg, callback) {
    var before, bucket, prefix, stream;
    bucket = _arg.bucket, prefix = _arg.prefix, before = _arg.before;
    stream = require('through')();
    finder.getMostRecentBackup(bucket, prefix, before, function(err, mostRecent) {
      var key, value;
      if (err != null) {
        if (callback != null) {
          callback(err);
        }
        stream.emit('error', err);
        stream.end();
      }
      for (key in mostRecent) {
        value = mostRecent[key];
        stream[key] = value;
      }
      s3.getObject({
        Bucket: bucket,
        Key: mostRecent.Key
      }).createReadStream().pipe(stream);
      if (callback != null) {
        return callback(null, stream);
      }
    });
    return stream;
  },
  downloadUrl: function(_arg, callback) {
    var before, bucket, prefix;
    bucket = _arg.bucket, prefix = _arg.prefix, before = _arg.before;
    return finder.getMostRecentBackup(bucket, prefix, before, function(err, mostRecent) {
      if (err != null) {
        callback(err);
      }
      return s3.getSignedUrl('getObject', {
        Bucket: bucket,
        Key: mostRecent.Key
      }, function(err, url) {
        mostRecent.signedUrl = url;
        if (callback != null) {
          return callback(null, mostRecent);
        }
      });
    });
  }
};
